// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VlammendVarkenBackend.Data;

#nullable disable

namespace VlammendVarkenBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250626115709_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("VlammendVarkenBackend.Models.Allergeen", b =>
                {
                    b.Property<int>("AllergeenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("allergeenId");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("beschrijving");

                    b.Property<string>("Symbool")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("symbool");

                    b.HasKey("AllergeenId");

                    b.ToTable("Allergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Bestelling", b =>
                {
                    b.Property<int>("BestellingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("bestellingId");

                    b.Property<DateTime>("Besteldatum")
                        .HasColumnType("TEXT")
                        .HasColumnName("besteldatum");

                    b.Property<int>("LevertijdId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("levertijdId");

                    b.HasKey("BestellingId");

                    b.HasIndex("LevertijdId");

                    b.ToTable("Bestellingen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.BestellingGerecht", b =>
                {
                    b.Property<int>("BestellingId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bestellingId");

                    b.Property<int>("GerechtId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gerechtId");

                    b.HasKey("BestellingId", "GerechtId");

                    b.HasIndex("GerechtId");

                    b.ToTable("BestellingGerechten");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.BestellingTafel", b =>
                {
                    b.Property<int>("BestellingId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bestellingId");

                    b.Property<int>("TafelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("tafelId");

                    b.HasKey("BestellingId", "TafelId");

                    b.HasIndex("TafelId");

                    b.ToTable("BestellingTafels");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Bijgerecht", b =>
                {
                    b.Property<int>("BijgerechtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("bijgerechtId");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naam");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("TEXT")
                        .HasColumnName("prijs");

                    b.HasKey("BijgerechtId");

                    b.ToTable("Bijgerechten");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.BijgerechtAllergeen", b =>
                {
                    b.Property<int>("BijgerechtId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bijgerechtId");

                    b.Property<int>("AllergeenId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("allergeenId");

                    b.HasKey("BijgerechtId", "AllergeenId");

                    b.HasIndex("AllergeenId");

                    b.ToTable("BijgerechtAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Gerecht", b =>
                {
                    b.Property<int>("GerechtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("gerechtId");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naam");

                    b.Property<string>("Soort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("soort");

                    b.HasKey("GerechtId");

                    b.ToTable("Gerechten");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.GerechtSamenstelling", b =>
                {
                    b.Property<int>("GerechtId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("gerechtId");

                    b.Property<int>("HoofdonderdeelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hoofdonderdeelId");

                    b.Property<int>("BijgerechtId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bijgerechtId");

                    b.Property<int>("GroenteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("groenteId");

                    b.Property<int>("SausId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sausId");

                    b.HasKey("GerechtId", "HoofdonderdeelId", "BijgerechtId", "GroenteId", "SausId");

                    b.HasIndex("BijgerechtId");

                    b.HasIndex("GroenteId");

                    b.HasIndex("HoofdonderdeelId");

                    b.HasIndex("SausId");

                    b.ToTable("GerechtSamenstellingen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Groente", b =>
                {
                    b.Property<int>("GroenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("groenteId");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naam");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("TEXT")
                        .HasColumnName("prijs");

                    b.HasKey("GroenteId");

                    b.ToTable("Groenten");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.GroenteAllergeen", b =>
                {
                    b.Property<int>("GroenteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("groenteId");

                    b.Property<int>("AllergeenId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("allergeenId");

                    b.HasKey("GroenteId", "AllergeenId");

                    b.HasIndex("AllergeenId");

                    b.ToTable("GroenteAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Hoofdonderdeel", b =>
                {
                    b.Property<int>("HoofdonderdeelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("hoofdonderdeelId");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naam");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("TEXT")
                        .HasColumnName("prijs");

                    b.HasKey("HoofdonderdeelId");

                    b.ToTable("Hoofdonderdelen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.HoofdonderdeelAllergeen", b =>
                {
                    b.Property<int>("HoofdonderdeelId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("hoofdonderdeelId");

                    b.Property<int>("AllergeenId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("allergeenId");

                    b.HasKey("HoofdonderdeelId", "AllergeenId");

                    b.HasIndex("AllergeenId");

                    b.ToTable("HoofdonderdeelAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Levertijd", b =>
                {
                    b.Property<int>("LevertijdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("levertijdId");

                    b.Property<int>("Minuten")
                        .HasColumnType("INTEGER")
                        .HasColumnName("minuten");

                    b.HasKey("LevertijdId");

                    b.ToTable("Levertijden");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Saus", b =>
                {
                    b.Property<int>("SausId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("sausId");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("naam");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("TEXT")
                        .HasColumnName("prijs");

                    b.HasKey("SausId");

                    b.ToTable("Sausen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.SausAllergeen", b =>
                {
                    b.Property<int>("SausId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sausId");

                    b.Property<int>("AllergeenId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("allergeenId");

                    b.HasKey("SausId", "AllergeenId");

                    b.HasIndex("AllergeenId");

                    b.ToTable("SausAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Tafel", b =>
                {
                    b.Property<int>("TafelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nummer")
                        .HasColumnType("INTEGER");

                    b.HasKey("TafelId");

                    b.ToTable("Tafels");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Bestelling", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Levertijd", "Levertijd")
                        .WithMany("Bestellingen")
                        .HasForeignKey("LevertijdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Levertijd");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.BestellingGerecht", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Bestelling", "Bestelling")
                        .WithMany("BestellingGerechten")
                        .HasForeignKey("BestellingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Gerecht", "Gerecht")
                        .WithMany("BestellingGerechten")
                        .HasForeignKey("GerechtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestelling");

                    b.Navigation("Gerecht");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.BestellingTafel", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Bestelling", "Bestelling")
                        .WithMany("BestellingTafels")
                        .HasForeignKey("BestellingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Tafel", "Tafel")
                        .WithMany()
                        .HasForeignKey("TafelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestelling");

                    b.Navigation("Tafel");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.BijgerechtAllergeen", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Allergeen", "Allergeen")
                        .WithMany("BijgerechtAllergenen")
                        .HasForeignKey("AllergeenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Bijgerecht", "Bijgerecht")
                        .WithMany("BijgerechtAllergenen")
                        .HasForeignKey("BijgerechtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergeen");

                    b.Navigation("Bijgerecht");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.GerechtSamenstelling", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Bijgerecht", "Bijgerecht")
                        .WithMany("GerechtSamenstellingen")
                        .HasForeignKey("BijgerechtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Gerecht", "Gerecht")
                        .WithMany("GerechtSamenstellingen")
                        .HasForeignKey("GerechtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Groente", "Groente")
                        .WithMany("GerechtSamenstellingen")
                        .HasForeignKey("GroenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Hoofdonderdeel", "Hoofdonderdeel")
                        .WithMany("GerechtSamenstellingen")
                        .HasForeignKey("HoofdonderdeelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Saus", "Saus")
                        .WithMany("GerechtSamenstellingen")
                        .HasForeignKey("SausId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bijgerecht");

                    b.Navigation("Gerecht");

                    b.Navigation("Groente");

                    b.Navigation("Hoofdonderdeel");

                    b.Navigation("Saus");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.GroenteAllergeen", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Allergeen", "Allergeen")
                        .WithMany("GroenteAllergenen")
                        .HasForeignKey("AllergeenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Groente", "Groente")
                        .WithMany("GroenteAllergenen")
                        .HasForeignKey("GroenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergeen");

                    b.Navigation("Groente");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.HoofdonderdeelAllergeen", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Allergeen", "Allergeen")
                        .WithMany("HoofdonderdeelAllergenen")
                        .HasForeignKey("AllergeenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Hoofdonderdeel", "Hoofdonderdeel")
                        .WithMany("HoofdonderdeelAllergenen")
                        .HasForeignKey("HoofdonderdeelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergeen");

                    b.Navigation("Hoofdonderdeel");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.SausAllergeen", b =>
                {
                    b.HasOne("VlammendVarkenBackend.Models.Allergeen", "Allergeen")
                        .WithMany("SausAllergenen")
                        .HasForeignKey("AllergeenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VlammendVarkenBackend.Models.Saus", "Saus")
                        .WithMany("SausAllergenen")
                        .HasForeignKey("SausId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergeen");

                    b.Navigation("Saus");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Allergeen", b =>
                {
                    b.Navigation("BijgerechtAllergenen");

                    b.Navigation("GroenteAllergenen");

                    b.Navigation("HoofdonderdeelAllergenen");

                    b.Navigation("SausAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Bestelling", b =>
                {
                    b.Navigation("BestellingGerechten");

                    b.Navigation("BestellingTafels");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Bijgerecht", b =>
                {
                    b.Navigation("BijgerechtAllergenen");

                    b.Navigation("GerechtSamenstellingen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Gerecht", b =>
                {
                    b.Navigation("BestellingGerechten");

                    b.Navigation("GerechtSamenstellingen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Groente", b =>
                {
                    b.Navigation("GerechtSamenstellingen");

                    b.Navigation("GroenteAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Hoofdonderdeel", b =>
                {
                    b.Navigation("GerechtSamenstellingen");

                    b.Navigation("HoofdonderdeelAllergenen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Levertijd", b =>
                {
                    b.Navigation("Bestellingen");
                });

            modelBuilder.Entity("VlammendVarkenBackend.Models.Saus", b =>
                {
                    b.Navigation("GerechtSamenstellingen");

                    b.Navigation("SausAllergenen");
                });
#pragma warning restore 612, 618
        }
    }
}
